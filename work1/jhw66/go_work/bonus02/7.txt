回答问题：Go语言中的切片和数组的区别有哪些？答案越详细越好。Go中创建切片有几种方式？创建map 呢？

1:
定义不同： 数组：[...]int{number},切片 []int{number}
类型不同： 数组是值类型,切片是引用类型(对底层数组的引用),切片只包含一个指针结构
大小变化： 数组大小是固定的,切片可以扩容(利用append进行追加)
灵活性：   切片可以再切片(slice2:=slice1[:]),数组无法做到
参数传递： 数组直接拷贝过去,切片拷贝切片头部结构体
零值不同： 在没有初始化的时候，数组的零值是包含所有元素零值的数组，切片的零值是 nil

2:
//第一种：
var intarr [6]int = [6]int{3, 6, 9, 1, 4, 7}
var slice []int = intarr[1:3]
//第二种：
slice := make([]int, 4, 20)
//第三种：
slice := []int{1, 4, 7}
//第四种：
slice2 := slice1[:]

3：
//第一种：
var a map[int]string = make(map[int]string, 10)
//第二种：
b := map[int]string{
		2009: "hhh",
		2008: "lll",
	}
