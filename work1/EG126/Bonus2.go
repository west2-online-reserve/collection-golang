//2.回答问题：Go语言中的切片和数组的区别有哪些？答案越详细越好。Go中创建切片有几种方式？创建map 呢？

/*
一.切片与数组的区别
1.数组：长度是固定的，且在定义时必须明确指定
  切片：长度是动态可变的，定义时无需指定长度
2.数组：长度是类型的一部分，如[3]int和[4]int是两种不同的类型
  切片：类型仅由元素类型决定，与长度无关
3.数组：是值类型，直接存储数据元素，内存是一块连续的固定大小的内存块
  切片：是引用类型，本身不存储数据，而是通过一个“描述符”引用底层数组
4.数组：赋值或作为函数参数传递时，会发生值拷贝，修改拷贝后的数组不会影响原数组
  切片：赋值或作为函数参数传递时，仅拷贝切片的“描述符”，不拷贝底层数组，修改切片会直接影响底层数组，进而影响所有引用该底层数组的切片
5.数组：未显示初始化时，元素会被赋予对应类型的零值
  切片：未显示初始化时，默认值为nil

二.创建切片的几种方式
1.基于数组切片
  arr := [5]int{1, 2, 3, 4, 5}
  s1 := arr[1:3]
2.使用切片字面量直接创建
  s1 := []int{1, 2, 3}
3.使用make函数创建
  s1 := make([]int, 3)
4.通过append函数从 nil 切片创建
  var s []int
  s1 = append(s1, 1, 2, 3)

三.创建map的几种方式
1.使用 map 字面量直接创建
  m1 := map[string]int{"a": 1, "b": 2}
2.使用make函数创建
  m2 := make(map[int]bool, 10)
3.先声明再初始化
  var m map[string]int
  m = make(map[string]int)
  m["a"] = 1

*/